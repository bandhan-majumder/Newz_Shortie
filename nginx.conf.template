events {
    worker_connections 1024;
}

http {

    limit_req_zone $binary_remote_addr zone=mylimit:10m rate=10r/s;

    upstream flask_app {
        server "{{HOST}}:5000";
    }

    server {
        listen 80;
        server_name "{{HOST}}";

        # applying rate limiting to all the requests
        limit_req zone=mylimit burst=20 nodelay;

        location / {
            proxy_pass http://flask_app;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /metrics {
           proxy_pass http://flask_app/metrics;
           proxy_set_header Host $host;
           proxy_set_header X-Real-IP $remote_addr;
           proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
           proxy_set_header X-Forwarder-Proto $scheme;
        }
    }
}
